
<div class="page-content">
    <nav class="page-breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="/admin/categories/">Categories</a></li>
            <li class="breadcrumb-item active" aria-current="page">Create</li>
        </ol>
    </nav>
    <div class="row">
            <div class="col-lg-6 grid-margin stretch-card">
                <div class="card">
                    <div class="card-body">
                        <h4 class="card-title">Add Category</h4>
                        <p class="card-description">sum text</p>
                            <form action="/api/categories/store" method="post" enctype="multipart/form-data">
                            <fieldset>
                                <div class="form-group">
                                    <label for="nameTm">Name (TM)</label>
                                    <input id="nameTm" name="nameTm" class="form-control" type="text">
                                </div>
                                <div class="form-group">
                                    <label for="nameRu">Name (RU)</label>
                                    <input id="nameRu" name="nameRu" class="form-control" type="text">
                                </div>
                                <div class="form-group">
                                    <label for="email">Description (TM)</label>
                                    <textarea id="descriptionTm"  name="descriptionTm" class="form-control" maxlength="100" rows="8"
                                    placeholder="This textarea has a limit of 100 chars."></textarea>
                                </div>
                                <div class="form-group">
                                    <label for="descriptionRu">Description (RU)</label>
                                    <textarea id="descriptionRu" name="descriptionRu" class="form-control" maxlength="100" rows="8"
                                    placeholder="This textarea has a limit of 100 chars."></textarea>
                                </div>
                                <div class="form-group">
									<label>Parent</label>
									<select class="select2 w-100" name="parentId" id="parentId">
										<option value="">Parent not</option>
                                        <% data.forEach(element => { %>
                                            <option value="<%=element.id%>"><%=element.name%></option>
                                        <% }) %>
									</select>
								</div>
                                <div class="form-group">
                                    <label for="order">Order</label>
                                    <input id="order" name="order" value="1" class="form-control" type="number">
                                </div>
                                <div class="form-check form-check-flat form-check-primary">
                                    <label class="form-check-label">
                                        <input type="checkbox" id="active" name="active" checked class="form-check-input">
                                        Active
                                    </label>
                                </div>
                                <div class="form-group">
                                    <div class="input-field">
                                        <label class="active">Photos</label>
                                        <div class="input-images-1" style="padding-top: .5rem;"></div>
                                    </div>
                                </div>
                                <button class="btn btn-primary submitter" type="submit">
                                    Save
                                </button>
                            </fieldset>
                            </form>
                    </div>
                </div>
            </div>
    </div>
</div>
<script type="text/javascript"  src="/assets/vendors/select2/select2.min.js"></script>
<script type="text/javascript" src="/assets/js/image-uploader.min.js"></script>

<script>
    let form={
        nameTm:'',
        nameRu:'',
        descriptionTm:'',
        descriptionRu:'',
        parentId:'',
        order:'1',
        active:'on',
    }
    let files=[]
    $(document).ready(function(){
        $(".select2").select2();
        onChange()
        $('form').submit(function(e) {
            $('.submitter').prop('disabled', true);
            e.preventDefault()
            form.files=files
            $.ajax({
                url      : $(this).attr('action'),
                type     : $(this).attr("method"),
                data     : form,
                dataType : 'json',
                success  : function (res)
                {
                    // response = jQuery.parseJSON(response);
                    console.log(res);
                    if (res.success) {
                        Swal.fire(
                            'Good job!',
                            res.message,
                            'success'
                        )
                        $('form').trigger("reset");
                    } else {
                        Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: res.message,
                        })
                    }
                    $('form').trigger("reset");
                    $('.submitter').prop('disabled', false);
                },
                error    : function (error)
                {
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: 'internal server error',
                        })

                    $('.submitter').prop('disabled', false);
                }
            });
        });
    });

    const onChange =()=>{
        $('.input-images-1').imageUploader({
            imagesInputName: 'photos',
            multiple:true
        });
        const toBase64 = file => new Promise((resolve, reject) => {
            const reader = new FileReader();
            reader.readAsDataURL(file);
            reader.onload = () => resolve(reader.result);
            reader.onerror = error => reject(error);
        });
        $('input[name="photos[]"]').change(async function(){
            files=[]
            await $.each($(this)[0].files,async function(i, file) {
                let item =await toBase64(file)
                files.push(item)
            });
        })
        Object.keys(form).forEach(key => {
            $(`#${key}`).change( function(){
                form[key]=$(this).val()
            })
        });
    }
</script>