
<div class="page-content">
    <nav class="page-breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="/<%= lang %>/admin/stores/"><span class="tr_lang">Stores</span></a></li>
            <li class="breadcrumb-item active" aria-current="page"><span class="tr_lang">Create</span></li>
        </ol>
    </nav>
    <div class="row">
            <div class="col-lg-6 grid-margin stretch-card">
                <div class="card">
                    <div class="card-body">
                        <h4 class="card-title"><span class="tr_lang">Add</span> <span class="tr_lang">store</span></h4>
                        <p class="card-description"><span class="tr_lang">some_text</span></p>
                        <form action="/api/stores/store" method="post" enctype="multipart/form-data">
                            <fieldset>
                                <div class="form-group">
                                    <label for="nameTm"><span class="tr_lang">Name</span> (Tm)</label>
                                    <input id="nameTm" name="nameTm" class="form-control" type="text">
                                </div>
                                <div class="form-group">
                                    <label for="nameRu"><span class="tr_lang">Name</span> (Ru)</label>
                                    <input id="nameRu" name="nameRu" class="form-control" type="text">
                                </div>
                                <div class="form-group">
                                    <label for="phoneNumbers"><span class="tr_lang">phone_numbers</span> (1,2,...)</label>
                                    <input id="phoneNumbers" name="phoneNumbers" class="form-control" type="text"
                                    placeholder="99361234567,99362345678,...">
                                </div>
                                <div class="form-group">
									<label><span class="tr_lang">Email</span></label>
                                    <input id="email" name="email" class="form-control" type="email">
								</div>
                                <div class="form-group">
									<label><span class="tr_lang">Location</span></label>
                                    <select class="select2 w-100" name="locId" id="locId">
                                        <option value="---" selected disabled>Bosh</option>
                                    </select>
								</div>
                                <div class="form-group">
									<label><span class="tr_lang">Category</span></label>
                                    <select class="select2 w-100" name="categories" id="categories"></select>
								</div>
                                <div class="form-group">
									<label><span class="tr_lang">Owner</span></label>
                                    <select class="select2 w-100" name="ownerIds[]" id="ownerIds"></select>
								</div>
                                <div class="form-group">
									<label><span class="tr_lang">Address</span> (Tm)</label>
                                    <input id="addressTm" name="addressTm" class="form-control" type="text">
								</div>
                                <div class="form-group">
									<label><span class="tr_lang">Address</span> (Ru)</label>
                                    <input id="addressRu" name="addressRu" class="form-control" type="text">
								</div>
                                <div class="form-group">
									<label><span class="tr_lang">delivery_price</span></label>
                                    <input id="delivery_price" name="delivery_price" class="form-control" type="text">
								</div>
                                <div class="form-group">
									<label><span class="tr_lang">delivery_price_ex</span></label>
                                    <input id="delivery_price_ex" name="delivery_price_ex" class="form-control" type="text">
								</div>
                                <div class="form-group">
									<label><span class="tr_lang">delivery_free</span></label>
                                    <input id="delivery_free" name="delivery_free" class="form-control" type="text">
								</div>
                                <div class="form-group">
									<label><span class="tr_lang">Order</span></label>
                                    <input id="order" name="order" class="form-control" type="number">
								</div>
                                <div class="form-check form-check-flat form-check-primary">
                                    <label class="form-check-label">
                                        <input type="checkbox" id="active" name="active" checked class="form-check-input">
                                        Active
                                    </label>
                                </div>
                                <div class="form-group">
                                    <div class="input-field">
                                        <label class="active"><span class="tr_lang">Images</span></label>
                                        <div class="input-images-1" style="padding-top: .5rem;"></div>
                                    </div>
                                </div>
                                <button class="btn btn-primary submitter" type="submit">
                                    <span class="tr_lang">Save</span>
                                </button>
                            </fieldset>
                        </form>
                    </div>
                </div>
            </div>
    </div>
</div>
<script type="text/javascript" src="/assets/js/image-uploader.min.js"></script>
<script src="/assets/vendors/select2/select2.min.js"></script>

<script>
    let form={
        nameRu:'',
        nameTm:'',
        email:'',
        phoneNumbers:'',
        addressTm:'',
        addressRu:'',
        delivery_price:'',
        delivery_price_ex:'',
        delivery_free:'',
        locId:0,
        order:1000,
        ownerIds:[],
        categories:[],
        // latitude,
        // lingitude,
        active:'on',
    }
    let files=[]
    $(document).ready(function(){
        onChange()
        $('form').submit(function(e) {
            $('.submitter').prop('disabled', true);
            e.preventDefault()
            form.files=files
            $.ajax({
                url      : $(this).attr('action'),
                type     : $(this).attr("method"),
                data     : form,
                dataType : 'json',
                success  : function (res)
                {
                    if (res.success) {
                        Swal.fire(
                            'Good job!',
                            res.message,
                            'success'
                        )
                        $('form').trigger("reset");
                    } else {
                        Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: res.message,
                        })
                    }
                    $('form').trigger("reset");
                    $('.submitter').prop('disabled', false);
                },
                error    : function (error)
                {
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: 'internal server error',
                        })
                    $('.submitter').prop('disabled', false);
                }
            });
        });
    });
    const onChange =()=>{
        $('.input-images-1').imageUploader({
            imagesInputName: 'photos',
            label:'drag_drop_files_here_or_click_to_browse',
            multiple:true
        });
        $('.upload-text span').addClass('tr_lang')
        const toBase64 = file => new Promise((resolve, reject) => {
            const reader = new FileReader();
            reader.readAsDataURL(file);
            reader.onload = () => resolve(reader.result);
            reader.onerror = error => reject(error);
        });
        $('input[name="photos[]"]').change(async function(){
            files=[]
            await $.each($(this)[0].files,async function(i, file) {
                let item =await toBase64(file)
                files.push(item)
            });
        })
        Object.keys(form).forEach(key => {
            $(`#${key}`).change( function(){
                form[key]=$(this).val()
            })
        });
        $('#active').change(function(){
            if($(this).is(":checked")) {
                //'checked' event code
                form.active='on'
                return;
            }
            form.active=null
        })
        $("#ownerIds").select2({
            placeholder: 'Select',
            minimumInputLength: 1,
            multiple:true,
            templateResult: formatState, //this is for append country flag.
            ajax: {
                url: `/api/users`,
                dataType: 'json',
                type: "POST",
                delay: 250,
                cache: true,
                data: function (params) {
                    console.log(params);
                    return {
                        search: {
                            name:params.term
                        },
                        page:1,
                        limit:10
                    };
                },
                processResults: function (data,params) {
                    params.page = params.page || 1;
                    console.log(data);
                    return {
                        results: $.map(data.data.tabledata, function (item) {
                            let url='/assets/images/placeholder.jpg'
                            if (item.documents.length>0) {
                                url='/uploads'+item.documents[0].path;
                            }
                            return {
                                text: tr(item.name),
                                id: item.id,
                                url
                            }
                        }),
                        pagination: {
                            more: (params.page * 10) < data.totalCount
                        }
                    };
                }
            }
        });
    }
    function formatState (state) {
        // console.log(state);
        if (!state.id) {
            return state.text;
        }
        var $state = $(
            '<span>' +state.text+ '</span>'
        );
        return $state;
    };
</script>
<script>
    //location
    $(document).ready(function(){
        getSelectData('locations','locId',{selectedIds:[0]})
        $('#locId').select2({
            placeholder: 'Select location',
            minimumResultsForSearch: 1,
            multiple: false,
        })
        $("#locId").trigger("change");
        getSelectData('categories','categories',{selectedIds:[0]})
        $('#categories').select2({
            placeholder: 'Select categories',
            minimumResultsForSearch: 1,
            multiple: true,
        })
        $("#categories").trigger("change");
    })
    const addOption=(array,id)=>{
        array.forEach(element => {
            let str=''
            for (let i = 0; i < element.subcount; i++) {
                str+='---'
            }
            $("#"+id)
            .append($("<option></option>")
            .attr("selected", element.selected )
            .attr("value", element.id )
            .text(str+tr(element.name) ));
        });
    }
    const getSelectData=(name,id,search={},)=>{
        const url=`/api/${name}/select2`
        const page=1
        const limit=10
        $.ajax({
            url      : url,
            type     : 'post',
            data     : {
                search,
                page,
                limit
            },
            dataType : 'json',
            success  : function (res) {
                if (res.success) {
                    addOption(res.data,id)
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: res.message,
                    })
                }
            },
            error    : function (error) {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: error.message,
                })
            }
        });
    }
</script>